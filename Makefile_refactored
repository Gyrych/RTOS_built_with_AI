# RTOS重构后版本编译脚本
# 适用于重构后的模块化架构

# 编译器设置
CC = arm-none-eabi-gcc
AS = arm-none-eabi-as
LD = arm-none-eabi-ld
OBJCOPY = arm-none-eabi-objcopy
OBJDUMP = arm-none-eabi-objdump
SIZE = arm-none-eabi-size

# 目标名称
TARGET = rtos_refactored

# 编译选项
CFLAGS = -mcpu=cortex-m4 -mthumb -mfloat-abi=hard -mfpu=fpv4-sp-d16 \
         -Wall -Wextra -std=c99 -O2 -g \
         -ffunction-sections -fdata-sections \
         -DUSE_STDPERIPH_DRIVER -DSTM32F407xx

ASFLAGS = -mcpu=cortex-m4 -mthumb -mfloat-abi=hard -mfpu=fpv4-sp-d16

LDFLAGS = -mcpu=cortex-m4 -mthumb -mfloat-abi=hard -mfpu=fpv4-sp-d16 \
          -Wl,--gc-sections -Wl,--print-memory-usage \
          -TSTM32F407VGTx_FLASH.ld

# 源文件目录
SRC_DIRS = . \
           rtos/core \
           rtos/task \
           rtos/sync \
           rtos/time \
           rtos/memory \
           rtos/hw

# 头文件目录
INC_DIRS = . \
           rtos/core \
           rtos/task \
           rtos/sync \
           rtos/time \
           rtos/memory

# 查找所有源文件
SRCS = $(shell find $(SRC_DIRS) -name "*.c")
ASMS = $(shell find $(SRC_DIRS) -name "*.s")

# 生成目标文件列表
OBJS = $(SRCS:.c=.o) $(ASMS:.s=.o)

# 生成依赖文件列表
DEPS = $(SRCS:.c=.d)

# 默认目标
all: $(TARGET).elf $(TARGET).hex $(TARGET).bin size

# 链接生成ELF文件
$(TARGET).elf: $(OBJS)
	@echo "链接 $(TARGET).elf"
	$(CC) $(LDFLAGS) -o $@ $^
	@echo "链接完成"

# 生成HEX文件
$(TARGET).hex: $(TARGET).elf
	@echo "生成 $(TARGET).hex"
	$(OBJCOPY) -O ihex $< $@

# 生成BIN文件
$(TARGET).bin: $(TARGET).elf
	@echo "生成 $(TARGET).bin"
	$(OBJCOPY) -O binary $< $@

# 编译C源文件
%.o: %.c
	@echo "编译 $<"
	$(CC) $(CFLAGS) $(addprefix -I,$(INC_DIRS)) -c $< -o $@

# 编译汇编文件
%.o: %.s
	@echo "汇编 $<"
	$(AS) $(ASFLAGS) $< -o $@

# 生成依赖文件
%.d: %.c
	@echo "生成依赖 $<"
	$(CC) $(CFLAGS) $(addprefix -I,$(INC_DIRS)) -MM -MT $(@:.d=.o) $< > $@

# 显示文件大小信息
size: $(TARGET).elf
	@echo "程序大小信息:"
	$(SIZE) $<

# 清理目标
clean:
	@echo "清理编译文件"
	rm -f $(OBJS) $(DEPS) $(TARGET).elf $(TARGET).hex $(TARGET).bin
	@echo "清理完成"

# 重新编译
rebuild: clean all

# 显示帮助信息
help:
	@echo "RTOS重构后版本编译脚本"
	@echo ""
	@echo "可用目标:"
	@echo "  all      - 编译所有文件 (默认)"
	@echo "  clean    - 清理编译文件"
	@echo "  rebuild  - 重新编译"
	@echo "  help     - 显示此帮助信息"
	@echo ""
	@echo "生成文件:"
	@echo "  $(TARGET).elf - ELF格式可执行文件"
	@echo "  $(TARGET).hex - Intel HEX格式文件"
	@echo "  $(TARGET).bin - 二进制格式文件"
	@echo ""
	@echo "编译选项:"
	@echo "  CFLAGS   = $(CFLAGS)"
	@echo "  ASFLAGS  = $(ASFLAGS)"
	@echo "  LDFLAGS  = $(LDFLAGS)"

# 包含依赖文件
-include $(DEPS)

# 伪目标声明
.PHONY: all clean rebuild help size
